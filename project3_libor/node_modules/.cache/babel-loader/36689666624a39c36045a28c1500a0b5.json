{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/libor/src/components/main/uploadbar.js\";\nimport logo from \"../../static/KPMG_logo_white.svg\";\n\nconst upload = async function onDrop(e) {\n  this.setState(this.state.upload = e.target.files[0]);\n  const options = {\n    maxSizeMB: 0.2,\n    maxWidthOrHeight: 1920,\n    useWebWorker: true\n  };\n\n  try {\n    const compressedFile = await imageCompression(this.state.upload, options);\n    console.log(compressedFile);\n    const formData = new FormData();\n    formData.append('doc_type', 'accounting');\n    formData.append('image', compressedFile);\n    return axios.post('http://localhost:5000/file', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      alert('failed');\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default function UploadBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploadbar_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"kpmg_logo\",\n      style: {\n        width: '80px',\n        float: 'left'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = UploadBar;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadBar\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/libor/src/components/main/uploadbar.js"],"names":["upload","onDrop","e","setState","state","target","files","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","imageCompression","console","log","formData","FormData","append","axios","post","headers","then","res","catch","err","alert","error","UploadBar","logo","width","float"],"mappings":";;;;AAEA,MAAMA,MAAM,GAAG,eAAeC,MAAf,CAAsBC,CAAtB,EAAyB;AACpC,OAAKC,QAAL,CAAc,KAAKC,KAAL,CAAWJ,MAAX,GAAoBE,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlC;AACA,QAAMC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE,GADC;AAEZC,IAAAA,gBAAgB,EAAE,IAFN;AAGZC,IAAAA,YAAY,EAAE;AAHF,GAAhB;;AAKA,MAAG;AACC,UAAMC,cAAc,GAAG,MAAMC,gBAAgB,CAAC,KAAKR,KAAL,CAAWJ,MAAZ,EAAoBO,OAApB,CAA7C;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACC,UAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACDD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,YAA5B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,cAAzB;AAEA,WAAOO,KAAK,CAACC,IAAN,CAAW,4BAAX,EAAyCJ,QAAzC,EAAmD;AAACK,MAAAA,OAAO,EAAC;AAAC,wBAAe;AAAhB;AAAT,KAAnD,EAAqGC,IAArG,CAA2GC,GAAG,IAAI;AAACT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AAAiB,KAApI,EAAsIC,KAAtI,CAA6IC,GAAG,IAAI;AAACC,MAAAA,KAAK,CAAC,QAAD,CAAL;AAAgB,KAArK,CAAP;AAEH,GATD,CASC,OAAMC,KAAN,EAAY;AACTb,IAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH;AACJ,CAnBD;;AAqBA,eAAe,SAASC,SAAT,GAAqB;AAChC,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,GAAG,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,KAAK,EAAC;AAArB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAPuBH,S;AAOvB","sourcesContent":["import logo from '../../static/KPMG_logo_white.svg';\n\nconst upload = async function onDrop(e) {\n    this.setState(this.state.upload = e.target.files[0])\n    const options = {\n        maxSizeMB: 0.2,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true,\n    };\n    try{\n        const compressedFile = await imageCompression(this.state.upload, options);\n        console.log(compressedFile);\n         const formData = new FormData();\n        formData.append('doc_type', 'accounting');\n        formData.append('image', compressedFile);\n\n        return axios.post('http://localhost:5000/file', formData, {headers:{'Content-Type':'multipart/form-data'}}).then( res => {console.log(res)}).catch( err => {alert('failed')});\n        \n    }catch(error){\n        console.log(error);\n    }\n};\n\nexport default function UploadBar() {\n    return(\n        <div className='uploadbar_container'>\n            <img src={logo} alt='kpmg_logo' style={{width:'80px', float:'left'}}/>\n            <button>Upload</button>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}