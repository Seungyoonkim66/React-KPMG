{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/AuthRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({\n  authenticated,\n  path,\n  render,\n  Component\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    to: path,\n    render: props => authenticated ? render ? render(props) : /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}\n\n_c = AuthRoute;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/AuthRoute.js"],"names":["React","Route","Redirect","AuthRoute","authenticated","path","render","Component","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,MAAvB;AAA+BC,EAAAA;AAA/B,CAAnB,EAA+D;AAC3D,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAEF,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IACNJ,aAAa,GACXE,MAAM,GACJA,MAAM,CAACE,KAAD,CADF,gBAGJ,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAJS,gBAOX,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB;AAAd;AAAA;AAAA;AAAA;AAAA;AAVN;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAjBMT,S;AAmBP,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ authenticated, path, render, Component }) {\n    return (\n      <Route\n        to={path}\n        render={(props) =>\n          authenticated ? (\n            render ? (\n              render(props)\n            ) : (\n              <Component />\n            )\n          ) : (\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }}/>\n          )\n        }\n      />\n    )\n  }\n  \n  export default AuthRoute"]},"metadata":{},"sourceType":"module"}