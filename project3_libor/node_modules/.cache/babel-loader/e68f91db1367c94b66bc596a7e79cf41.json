{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/main_ver2/uploadbutton_ver2.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BackupOutlinedIcon from '@material-ui/icons/BackupOutlined';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(3)\n  },\n  btn: {\n    backgroundColor: 'rgba(251,161,0, 0.5)',\n    width: '30%',\n    display: 'block',\n    margin: 'auto',\n    padding: theme.spacing(1),\n    borderRadius: '500px'\n  }\n}));\n/*\n{\n    \"files\": [\n              {\n                \"name\" : \"filename\", \n                \"type\" : \"filetype\",  \n                \"lastModified\" : \"lastModified\", \n                \"size\" : \"filesize\", \n                \"content\": \"Unit8Array String\",\n              } \n           ] \n  }\n*/\n\nexport default function UploadButton() {\n  _s();\n\n  const classes = useStyles();\n\n  const handleUpload = e => {\n    e.preventDefault();\n    const url = \"http://.../upload-files\";\n    const config = {\n      headers: {\n        'Content-Type': 'application/jso'\n      }\n    };\n    const files = e.target.files;\n    const filesArray = Object.values(files); // console.log(filesArray);\n\n    const appendList = [];\n    filesArray.map(file => {\n      const settingFile = {\n        \"name\": file.name,\n        \"type\": file.type,\n        \"lastModified\": file.lastModified,\n        \"size\": file.size,\n        \"content\": \"Unit8Array String\"\n      };\n      appendList.push({\n        settingFile\n      });\n      console.log(settingFile);\n    });\n    console.log(appendList);\n    const formData = new FormData();\n    filesArray.map(file => {\n      formData.append(\"files\", file);\n    }); // for (let key of formData.keys()) {\n    //     console.log(key);\n    //   }\n    // for (let value of formData.values()) {\n    //     console.log(value);\n    //   }\n    // formData.append(\"uploadedFiles\", files);\n    // const config = {\n    //     headers: {\n    //         \"content-type\": \"application/json\"\n    //     }\n    // };\n    // axios.post(url, formData, config);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: 'none'\n      },\n      id: \"upload\",\n      accept: \"*\",\n      multiple: true,\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btn,\n        children: [/*#__PURE__*/_jsxDEV(BackupOutlinedIcon, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#f5f5f5'\n          },\n          children: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UploadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/main_ver2/uploadbutton_ver2.js"],"names":["makeStyles","BackupOutlinedIcon","axios","useStyles","theme","root","marginTop","spacing","btn","backgroundColor","width","display","margin","padding","borderRadius","UploadButton","classes","handleUpload","e","preventDefault","url","config","headers","files","target","filesArray","Object","values","appendList","map","file","settingFile","name","type","lastModified","size","push","console","log","formData","FormData","append","color"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport BackupOutlinedIcon from '@material-ui/icons/BackupOutlined';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(3)\n    },\n    btn: {\n        backgroundColor: 'rgba(251,161,0, 0.5)',\n        width: '30%',\n        display: 'block',\n        margin: 'auto',\n        padding: theme.spacing(1),\n        borderRadius: '500px',\n    }\n}));\n\n/*\n{\n    \"files\": [\n              {\n                \"name\" : \"filename\", \n                \"type\" : \"filetype\",  \n                \"lastModified\" : \"lastModified\", \n                \"size\" : \"filesize\", \n                \"content\": \"Unit8Array String\",\n              } \n           ] \n  }\n*/\n\nexport default function UploadButton() {\n    const classes = useStyles();\n\n    const handleUpload = (e) => {\n        e.preventDefault();\n        const url = \"http://.../upload-files\";\n        const config = { headers: { 'Content-Type': 'application/jso' } };\n    \n        const files = e.target.files;\n        const filesArray = Object.values(files);\n        // console.log(filesArray);\n        const appendList = [];\n        filesArray.map(file => {\n            const settingFile = {\n                \"name\": file.name,\n                \"type\": file.type,\n                \"lastModified\": file.lastModified,\n                \"size\": file.size,\n                \"content\": \"Unit8Array String\"\n            }\n            appendList.push({settingFile});\n            console.log(settingFile);\n        });\n        console.log(appendList);\n\n\n\n\n        const formData = new FormData();\n        \n        filesArray.map(file => {\n            formData.append(\"files\", file)\n        });\n        \n        // for (let key of formData.keys()) {\n        //     console.log(key);\n        //   }\n        // for (let value of formData.values()) {\n        //     console.log(value);\n        //   }\n\n\n        // formData.append(\"uploadedFiles\", files);\n        // const config = {\n        //     headers: {\n        //         \"content-type\": \"application/json\"\n        //     }\n        // };\n        // axios.post(url, formData, config);\n    }\n\n    return (\n        <div className={classes.root}>\n            <input style={{ display: 'none' }} id='upload' accept=\"*\" multiple type=\"file\" onChange={handleUpload} />\n            {/* accept=\"image/*,audio/*,video/mp4,video/x-m4v,application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,.csv\" */}\n            <label htmlFor='upload'>\n                <div className={classes.btn}>\n                    <BackupOutlinedIcon color=\"secondary\" />\n                    <div style={{color: '#f5f5f5'}}>upload</div>\n                </div>\n            </label>\n        </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}