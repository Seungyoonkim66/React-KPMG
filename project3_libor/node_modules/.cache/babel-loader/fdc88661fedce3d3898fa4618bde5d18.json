{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/logininput.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  input: {\n    marginTop: theme.spacing(1)\n  },\n  btn: {\n    backgroundColor: 'rgba(251,161,0, 0.8)',\n    marginTop: theme.spacing(3),\n    color: '#555'\n  }\n}));\nexport default function LoginInput({\n  authenticated,\n  login\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const isEmailValid = ({\n    email\n  }) => {\n    if (/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\w{2,3})+$/.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const authToLogin = ({\n    email,\n    password\n  }) => {\n    if (isEmailValid({\n      email\n    }) === true) {\n      login({\n        email,\n        password\n      });\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleLogin = () => {\n    if (email !== \"\" && password !== \"\") {\n      if (authToLogin({\n        email,\n        password\n      }) === true) {\n        console.log(\"login success\");\n        authenticated = true;\n      } else {\n        alert('Login failed');\n        setEmail(\"\");\n        setPassword(\"\");\n        authenticated = false;\n      }\n    } else {\n      alert(\"Both email and password are required.\");\n    }\n  };\n\n  if (authenticated) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/main\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"auth\",\n      fullWidth: true,\n      className: classes.formControl,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"auth-email\",\n        type: \"email\",\n        label: \"Email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setEmail(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"auth-password\",\n        type: \"password\",\n        label: \"Password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"auth\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        disableElevation: true,\n        onClick: handleLogin,\n        className: classes.btn,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n} //autoComplete=\"current-password\"\n\n_s(LoginInput, \"zlprQZmeyRnz66sIT2lW3x9//fs=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInput\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/logininput.js"],"names":["makeStyles","Redirect","React","TextField","InputLabel","FormControl","Button","useStyles","theme","formControl","width","marginTop","spacing","input","btn","backgroundColor","color","LoginInput","authenticated","login","classes","email","setEmail","useState","password","setPassword","isEmailValid","test","authToLogin","handleLogin","console","log","alert","target","value"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFF,GADwB;AAKrCC,EAAAA,KAAK,EAAE;AACHF,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADR,GAL8B;AAQrCE,EAAAA,GAAG,EAAE;AACDC,IAAAA,eAAe,EAAE,sBADhB;AAEDJ,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFV;AAGDI,IAAAA,KAAK,EAAE;AAHN;AARgC,CAAZ,CAAD,CAA5B;AAiBA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAApB,EAA8C;AAAA;;AACzD,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BvB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAhC;;AAEA,QAAMG,YAAY,GAAG,CAAC;AAAEL,IAAAA;AAAF,GAAD,KAAe;AAChC,QAAI,0CAA0CM,IAA1C,CAA+CN,KAA/C,CAAJ,EAA2D;AACvD,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAPD;;AASA,QAAMO,WAAW,GAAG,CAAC;AAAEP,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,KAAyB;AAEzC,QAAIE,YAAY,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAZ,KAA4B,IAAhC,EAAsC;AAClCF,MAAAA,KAAK,CAAC;AAAEE,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAAD,CAAL;AACA,aAAO,IAAP;AACH,KAHD,MAIK;AACD,aAAO,KAAP;AACH;AACJ,GATD;;AAWA,QAAMK,WAAW,GAAG,MAAM;AAEtB,QAAIR,KAAK,KAAK,EAAV,IAAgBG,QAAQ,KAAK,EAAjC,EAAqC;AACjC,UAAII,WAAW,CAAC;AAAEP,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAAD,CAAX,KAAqC,IAAzC,EAA+C;AAC3CM,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAb,QAAAA,aAAa,GAAG,IAAhB;AACH,OAHD,MAIK;AACDc,QAAAA,KAAK,CAAC,cAAD,CAAL;AACAV,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAP,QAAAA,aAAa,GAAG,KAAhB;AACH;AACJ,KAXD,MAYK;AACDc,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACH;AACJ,GAjBD;;AAmBA,MAAId,aAAJ,EAAmB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAEnB,sBACI;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAE,IAAlC;AAAwC,MAAA,SAAS,EAAEE,OAAO,CAACX,WAA3D;AAAwE,MAAA,OAAO,EAAC,UAAhF;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEW,OAAO,CAACP,KADvB;AAEI,QAAA,EAAE,EAAC,YAFP;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,KAAK,EAAC,OAJV;AAKI,QAAA,OAAO,EAAC,UALZ;AAMI,QAAA,KAAK,EAAEQ,KANX;AAOI,QAAA,QAAQ,EAAE,CAAC;AAAEY,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV,SAAD,KAA2BZ,QAAQ,CAACY,KAAD;AAPjD;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEd,OAAO,CAACP,KADvB;AAEI,QAAA,EAAE,EAAC,eAFP;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,KAAK,EAAC,UAJV;AAKI,QAAA,OAAO,EAAC,UALZ;AAMI,QAAA,KAAK,EAAEW,QANX;AAOI,QAAA,QAAQ,EAAE,CAAC;AAAES,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV,SAAD,KAA2BT,WAAW,CAACS,KAAD;AAPpD;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAAA,6BACQ,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,SAAS,EAAE,IAFf;AAGI,QAAA,gBAAgB,EAAE,IAHtB;AAII,QAAA,OAAO,EAAEL,WAJb;AAKI,QAAA,SAAS,EAAET,OAAO,CAACN,GALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,C,CAKD;;GArFwBG,U;UACJV,S;;;KADIU,U","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\"\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    input: {\n        marginTop: theme.spacing(1),\n    },\n    btn: {\n        backgroundColor: 'rgba(251,161,0, 0.8)',\n        marginTop: theme.spacing(3),\n        color: '#555'\n    },\n}));\n\n\n\nexport default function LoginInput({ authenticated, login }) {\n    const classes = useStyles();\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    const isEmailValid = ({ email }) => {\n        if (/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\w{2,3})+$/.test(email)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    const authToLogin = ({ email, password }) => {\n\n        if (isEmailValid({ email }) === true) {\n            login({ email, password })\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    const handleLogin = () => {\n\n        if (email !== \"\" && password !== \"\") {\n            if (authToLogin({ email, password }) === true) {\n                console.log(\"login success\");\n                authenticated = true;\n            }\n            else {\n                alert('Login failed');\n                setEmail(\"\");\n                setPassword(\"\");\n                authenticated = false;\n            }\n        }\n        else {\n            alert(\"Both email and password are required.\");\n        }\n    }\n\n    if (authenticated) return <Redirect to='/main' />\n\n    return (\n        <div>\n            <FormControl id='auth' fullWidth={true} className={classes.formControl} variant=\"outlined\">\n                <TextField\n                    className={classes.input}\n                    id=\"auth-email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({ target: { value } }) => setEmail(value)}\n                />\n                <TextField\n                    className={classes.input}\n                    id=\"auth-password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    variant=\"outlined\"\n                    value={password}\n                    onChange={({ target: { value } }) => setPassword(value)}\n                />\n            </FormControl>\n            <InputLabel htmlFor='auth'>\n                    <Button\n                        variant=\"contained\"\n                        fullWidth={true}\n                        disableElevation={true}\n                        onClick={handleLogin}\n                        className={classes.btn}\n                    >login\n                    </Button>\n            </InputLabel>\n        </div>\n    );\n}\n\n\n\n\n//autoComplete=\"current-password\""]},"metadata":{},"sourceType":"module"}