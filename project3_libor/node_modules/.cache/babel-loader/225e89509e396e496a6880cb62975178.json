{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/logininput.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  input: {\n    marginTop: theme.spacing(1)\n  },\n  btn: {\n    backgroundColor: 'rgba(251,161,0, 0.8)',\n    marginTop: theme.spacing(3),\n    color: '#555'\n  }\n})); // const isEmailValid = ({ email }) => {\n//     if (email.value.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)){\n//         console.log(\"valid false\");\n//         return false;\n//     } else {\n//         console.log(\"valid true\");\n//         return true;\n//     }\n// };\n\nconst authToLogin = ({\n  email,\n  password\n}) => {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n    return true;\n  } else {\n    alert(\"Invalid Email : Input exact email address\");\n    return false;\n  }\n};\n\nexport default function LoginInput() {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState('');\n\n  const handleLogin = () => {\n    if (authToLogin({\n      email,\n      password\n    }) === true) {\n      console.log(\"login\");\n    } else {\n      console.log('fail');\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"auth\",\n      fullWidth: true,\n      className: classes.formControl,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"auth-email\",\n        type: \"email\",\n        label: \"Email@\",\n        variant: \"outlined\",\n        value: email,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setEmail(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"auth-password\",\n        type: \"password\",\n        label: \"Password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"auth\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        disableElevation: true,\n        onClick: handleLogin,\n        className: classes.btn,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n} //autoComplete=\"current-password\"\n\n_s(LoginInput, \"zBMOgE4DK7m32ly/Yix/pCNX5cE=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInput\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/logininput.js"],"names":["makeStyles","React","TextField","InputLabel","FormControl","Button","useStyles","theme","formControl","width","marginTop","spacing","input","btn","backgroundColor","color","authToLogin","email","password","test","alert","LoginInput","classes","setEmail","useState","setPassword","handleLogin","console","log","target","value"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    input: {\n        marginTop: theme.spacing(1),\n    },\n    btn: {\n        backgroundColor: 'rgba(251,161,0, 0.8)',\n        marginTop: theme.spacing(3),\n        color:'#555'\n    },\n}));\n\n// const isEmailValid = ({ email }) => {\n//     if (email.value.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)){\n//         console.log(\"valid false\");\n//         return false;\n//     } else {\n//         console.log(\"valid true\");\n//         return true;\n//     }\n// };\n\nconst authToLogin = ( { email, password }) => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)){\n        return true;\n    }\n    else{\n        alert(\"Invalid Email : Input exact email address\");\n        return false;\n    }\n}\n\nexport default function LoginInput() {\n    const classes = useStyles();\n    const [email,setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState('');\n\n    const handleLogin = () => {\n        if (authToLogin({email, password}) === true) {\n            console.log(\"login\");\n        }\n        else {\n            console.log('fail');\n            setEmail(\"\");\n            setPassword(\"\");\n        }\n    }\n\n    return(\n\n        <div>\n            <FormControl id='auth' fullWidth={true} className={classes.formControl} variant=\"outlined\">\n                                    <TextField \n                                        className={classes.input} \n                                        id=\"auth-email\" \n                                        type=\"email\" \n                                        label=\"Email@\" \n                                        variant=\"outlined\" \n                                        value={email} \n                                        onChange={({ target: { value } }) => setEmail(value)}\n                                    />\n                                    <TextField \n                                        className={classes.input} \n                                        id=\"auth-password\" \n                                        type=\"password\" \n                                        label=\"Password\"  \n                                        variant=\"outlined\" \n                                        value={password}\n                                        onChange={({ target: { value }}) => setPassword(value)}\n                                    />\n                                </FormControl>\n                                <InputLabel htmlFor='auth'>\n                                    <Button \n                                        variant=\"contained\" \n                                        fullWidth={true} \n                                        disableElevation={true} \n                                        onClick={handleLogin} \n                                        className={classes.btn}\n                                    >\n                                        login\n                                    </Button>\n                                </InputLabel>\n        </div>\n    );\n}\n\n\n\n\n//autoComplete=\"current-password\""]},"metadata":{},"sourceType":"module"}