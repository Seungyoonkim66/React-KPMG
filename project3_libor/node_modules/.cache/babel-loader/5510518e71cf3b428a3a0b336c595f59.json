{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/main_ver2/resulttable_ver2.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport annotationlist from '../../static/annotationlist.json';\nconst qalist = annotationlist.annotatonlist;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'documentName',\n  numeric: false,\n  label: 'documentName'\n}, {\n  id: 'documentID',\n  numeric: false,\n  label: 'documentID'\n}, {\n  id: 'resultKey',\n  numeric: false,\n  label: 'resultKey'\n}, {\n  id: 'resultValue',\n  numeric: false,\n  label: 'resultValue'\n}, {\n  id: 'resultValueExtracted',\n  numeric: false,\n  label: 'resultValueExtracted'\n}, {\n  id: 'igniteElementID',\n  numeric: false,\n  label: 'igniteElementID'\n}, {\n  id: 'disModified',\n  numeric: false,\n  label: 'isModified'\n}, {\n  id: 'annotationID',\n  numeric: false,\n  label: 'annotationID'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.headRow,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'default',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    backgroundColor: 'rgba(255,255, 255, 0.5)',\n    textAlign: 'left'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  headRow: {\n    backgroundColor: 'rgba(255, 255, 255, 0.4)'\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.primary.main,\n    backgroundColor: lighten(theme.palette.primary.light, 0.955)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\nexport default function ResultTable() {\n  _s();\n\n  // const [rows, setRow] = React.useState([\n  //     {\n  //         rowID: 0,\n  //         documentName: 'file1.pdf',\n  //         documentID: 1,\n  //         resultKey: 'Q1',\n  //         resultValue: 'A1',\n  //         resultValueExtracted: 'A1',\n  //         igniteElementID: 1,\n  //         isModified: 'true',\n  //         annotationID: 1,\n  //     },\n  //     {\n  //         rowID: 1,\n  //         documentName: 'file1.pdf',\n  //         documentID: 1,\n  //         resultKey: 'Q2',\n  //         resultValue: 'A2',\n  //         resultValueExtracted: 'A2',\n  //         igniteElementID: 2,\n  //         isModified: 'true',\n  //         annotationID: 2,\n  //     },\n  //     {\n  //         rowID: 2,\n  //         documentName: 'file2.pdf',\n  //         documentID: 2,\n  //         resultKey: 'Q1',\n  //         resultValue: 'A1',\n  //         resultValueExtracted: 'A1',\n  //         igniteElementID: 1,\n  //         isModified: 'true',\n  //         annotationID: 1,\n  //     },\n  // ]);\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(16);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.rowID);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleDelete = () => {\n    const selectedRows = selected.map(index => {\n      return rows[index];\n    }); // console.log(selectedRows);\n\n    selectedRows.map(selectedRow => {\n      return rows.splice(rows.filter(row => row === selectedRow), 1);\n    });\n    const newRows = selectedRows.map(selectedRow => rows.splice(rows.filter(row => row !== selectedRow), 1));\n    setRow(newRows[0]);\n  };\n\n  const numSelected = selected.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        className: clsx(classes.toolBarRoot, {\n          [classes.highlight]: numSelected > 0\n        }),\n        children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"inherit\",\n          variant: \"subtitle1\",\n          component: \"div\",\n          children: [numSelected, \" selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h6\",\n          id: \"tableTitle\",\n          component: \"div\",\n          children: \"table subtitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            onClick: handleDelete,\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.rowID);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.rowID),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.documentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.documentID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.resultKey\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.resultValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.resultValueExtracted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.igniteElementID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.isModified\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.annotationID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 45\n                }, this)]\n              }, row.rowID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [8, 16],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResultTable, \"3fpN6VkpXqUpaT5HtlpSSKJ3wQw=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ResultTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"ResultTable\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/main_ver2/resulttable_ver2.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","annotationlist","qalist","annotatonlist","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headRow","headCell","disablePadding","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useStyles","theme","root","width","paper","backgroundColor","textAlign","border","clip","height","margin","overflow","padding","position","top","highlight","palette","type","color","primary","main","light","text","secondary","dark","title","flex","ResultTable","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","rows","n","rowID","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","handleDelete","selectedRows","selectedRow","splice","filter","row","newRows","setRow","toolBarRoot","isItemSelected","labelId","documentName","documentID","resultKey","resultValue","resultValueExtracted","igniteElementID","isModified","annotationID"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport annotationlist from '../../static/annotationlist.json';\n\nconst qalist = annotationlist.annotatonlist;\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'documentName', numeric: false, label: 'documentName' },\n    { id: 'documentID', numeric: false, label: 'documentID' },\n    { id: 'resultKey', numeric: false, label: 'resultKey' },\n    { id: 'resultValue', numeric: false, label: 'resultValue' },\n    { id: 'resultValueExtracted', numeric: false, label: 'resultValueExtracted' },\n    { id: 'igniteElementID', numeric: false, label: 'igniteElementID' },\n    { id: 'disModified', numeric: false, label: 'isModified' },\n    { id: 'annotationID', numeric: false, label: 'annotationID' },\n];\n\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow className={classes.headRow}>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        backgroundColor: 'rgba(255,255, 255, 0.5)',\n        textAlign: 'left',\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    headRow: {\n        backgroundColor: 'rgba(255, 255, 255, 0.4)',\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.primary.main,\n                backgroundColor: lighten(theme.palette.primary.light, 0.955),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nexport default function ResultTable() {\n\n    // const [rows, setRow] = React.useState([\n    //     {\n    //         rowID: 0,\n    //         documentName: 'file1.pdf',\n    //         documentID: 1,\n    //         resultKey: 'Q1',\n    //         resultValue: 'A1',\n    //         resultValueExtracted: 'A1',\n    //         igniteElementID: 1,\n    //         isModified: 'true',\n    //         annotationID: 1,\n    //     },\n    //     {\n    //         rowID: 1,\n    //         documentName: 'file1.pdf',\n    //         documentID: 1,\n    //         resultKey: 'Q2',\n    //         resultValue: 'A2',\n    //         resultValueExtracted: 'A2',\n    //         igniteElementID: 2,\n    //         isModified: 'true',\n    //         annotationID: 2,\n    //     },\n    //     {\n    //         rowID: 2,\n    //         documentName: 'file2.pdf',\n    //         documentID: 2,\n    //         resultKey: 'Q1',\n    //         resultValue: 'A1',\n    //         resultValueExtracted: 'A1',\n    //         igniteElementID: 1,\n    //         isModified: 'true',\n    //         annotationID: 1,\n    //     },\n    // ]);\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense] = React.useState(true);\n    const [rowsPerPage, setRowsPerPage] = React.useState(16);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.rowID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const handleDelete = () => {\n\n        const selectedRows = selected.map((index) => {\n            return rows[index];\n        });\n        // console.log(selectedRows);\n\n        selectedRows.map(selectedRow => {\n            return rows.splice(rows.filter(row => row === selectedRow),1);\n        });\n\n        const newRows = selectedRows.map(selectedRow => rows.splice(rows.filter(row => row !== selectedRow),1));\n\n        setRow(newRows[0]);\n\n    }\n\n    const numSelected = selected.length;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <Toolbar\n                    className={clsx(classes.toolBarRoot, {\n                        [classes.highlight]: numSelected > 0,\n                    })}\n                >\n                    {numSelected > 0 ? (\n                        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                            {numSelected} selected\n                        </Typography>\n                    ) : (\n                            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                                table subtitle\n                            </Typography>\n                        )}\n\n                    {numSelected > 0 ? (\n                        <Tooltip title=\"Delete\">\n                            <IconButton aria-label=\"delete\" onClick={handleDelete}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </Tooltip>\n                    ) : (\n                            null\n                        )}\n                </Toolbar>\n                <TableContainer>\n                    <Table\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.rowID);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.rowID)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.rowID}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\" >{row.documentName}</TableCell>\n                                            <TableCell align=\"center\">{row.documentID}</TableCell>\n                                            <TableCell align=\"center\">{row.resultKey}</TableCell>\n                                            <TableCell align=\"center\">{row.resultValue}</TableCell>\n                                            <TableCell align=\"center\">{row.resultValueExtracted}</TableCell>\n                                            <TableCell align=\"center\">{row.igniteElementID}</TableCell>\n                                            <TableCell align=\"center\">{row.isModified}</TableCell>\n                                            <TableCell align=\"center\">{row.annotationID}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[8, 16]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}