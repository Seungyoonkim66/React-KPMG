{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nconst testUsers = [{\n  email: \"kim@test.com\",\n  password: \"123\",\n  name: \"Kim\"\n}, {\n  email: \"lee@test.com\",\n  password: \"456\",\n  name: \"Lee\"\n}, {\n  email: \"park@test.com\",\n  password: \"789\",\n  name: \"Park\"\n}];\nexport function Authentication({\n  email,\n  password,\n  setEmail,\n  setPassword\n}) {\n  _s();\n\n  const [auth, setAuth] = React.useState();\n\n  const isEmailValid = ({\n    email\n  }) => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const authToLogin = ({\n    email,\n    password\n  }) => {\n    if (isEmailValid({\n      email\n    }) === true) {\n      const user = testUsers.find(user => user.email === email && user.password === password);\n      if (user === undefined) return false;\n      setAuth(true);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleLogin = () => {\n    if (email !== \"\" && password !== \"\") {\n      if (authToLogin({\n        email,\n        password\n      }) === true) {\n        console.log(\"login success\");\n      } else {\n        alert('Login failed');\n        setEmail(\"\");\n        setPassword(\"\");\n      }\n    } else {\n      alert(\"Both email and password are required.\");\n    }\n  };\n}\n\n_s(Authentication, \"yoj5qs6F4OsBVKQ/I/DvuUg03IM=\");\n\n_c = Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/authentication.js"],"names":["React","testUsers","email","password","name","Authentication","setEmail","setPassword","auth","setAuth","useState","isEmailValid","test","authToLogin","user","find","undefined","handleLogin","console","log","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,QAAQ,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,QAAQ,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,QAAQ,EAAE,KAApC;AAA2CC,EAAAA,IAAI,EAAE;AAAjD,CAHc,CAAlB;AAMA,OAAO,SAASC,cAAT,CAAyB;AAACH,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBG,EAAAA,QAAlB;AAA4BC,EAAAA;AAA5B,CAAzB,EAAoE;AAAA;;AACvE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,EAAxB;;AACA,QAAMC,YAAY,GAAG,CAAC;AAAET,IAAAA;AAAF,GAAD,KAAe;AAChC,QAAI,gDAAgDU,IAAhD,CAAqDV,KAArD,CAAJ,EAAiE;AAC7D,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAPD;;AASA,QAAMW,WAAW,GAAG,CAAC;AAAEX,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyB;AAEzC,QAAIQ,YAAY,CAAC;AAAET,MAAAA;AAAF,KAAD,CAAZ,KAA4B,IAAhC,EAAsC;AAClC,YAAMY,IAAI,GAAGb,SAAS,CAACc,IAAV,CAAgBD,IAAD,IAAUA,IAAI,CAACZ,KAAL,KAAeA,KAAf,IAAwBY,IAAI,CAACX,QAAL,KAAkBA,QAAnE,CAAb;AACA,UAAIW,IAAI,KAAKE,SAAb,EAAwB,OAAO,KAAP;AACxBP,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,aAAO,IAAP;AACH,KALD,MAMK;AACD,aAAO,KAAP;AACH;AACJ,GAXD;;AAaA,QAAMQ,WAAW,GAAG,MAAM;AACtB,QAAIf,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAqC;AACjC,UAAIU,WAAW,CAAC;AAAEX,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAX,KAAqC,IAAzC,EAA+C;AAC3Ce,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,OAFD,MAGK;AACDC,QAAAA,KAAK,CAAC,cAAD,CAAL;AACAd,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,KATD,MAUK;AACDa,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACH;AACJ,GAdD;AAgBH;;GAxCef,c;;KAAAA,c","sourcesContent":["import React from 'react';\n\nconst testUsers = [\n    { email: \"kim@test.com\", password: \"123\", name: \"Kim\" },\n    { email: \"lee@test.com\", password: \"456\", name: \"Lee\" },\n    { email: \"park@test.com\", password: \"789\", name: \"Park\" },\n]\n\nexport function Authentication( {email, password, setEmail, setPassword } ){\n    const [auth, setAuth] = React.useState();\n    const isEmailValid = ({ email }) => {\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    const authToLogin = ({ email, password }) => {\n\n        if (isEmailValid({ email }) === true) {\n            const user = testUsers.find((user) => user.email === email && user.password === password)\n            if (user === undefined) return false;\n            setAuth(true);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    const handleLogin = () => {\n        if (email !== \"\" && password !== \"\") {\n            if (authToLogin({ email, password }) === true) {\n                console.log(\"login success\");\n            }\n            else {\n                alert('Login failed');\n                setEmail(\"\");\n                setPassword(\"\");\n            }\n        }\n        else {\n            alert(\"Both email and password are required.\");\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}