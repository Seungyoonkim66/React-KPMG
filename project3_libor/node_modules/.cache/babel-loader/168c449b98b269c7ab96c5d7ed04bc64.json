{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/logininput.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Authentication from './authentication';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  input: {\n    marginTop: theme.spacing(1)\n  },\n  btn: {\n    backgroundColor: 'rgba(251,161,0, 0.8)',\n    marginTop: theme.spacing(3),\n    color: '#555'\n  }\n}));\nconst testUsers = [{\n  email: \"kim@test.com\",\n  password: \"123\",\n  name: \"Kim\"\n}, {\n  email: \"lee@test.com\",\n  password: \"456\",\n  name: \"Lee\"\n}, {\n  email: \"park@test.com\",\n  password: \"789\",\n  name: \"Park\"\n}];\nexport const handleLogin = () => {\n  if (email !== \"\" && password !== \"\") {\n    if (authToLogin({\n      email,\n      password\n    }) === true) {\n      console.log(\"login success\");\n    } else {\n      alert('Login failed');\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  } else {\n    alert(\"Both email and password are required.\");\n  }\n};\nexport default function LoginInput() {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [auth, setAuth] = React.useState();\n\n  const isEmailValid = ({\n    email\n  }) => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const authToLogin = ({\n    email,\n    password\n  }) => {\n    if (isEmailValid({\n      email\n    }) === true) {\n      const user = testUsers.find(user => user.email === email && user.password === password);\n      if (user === undefined) return false;\n      setAuth(true);\n\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this);\n\n      return true;\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this);\n\n      return false;\n    }\n  }; // const handleLogin = () => {\n  //     if (email !== \"\" && password !== \"\") {\n  //         if (authToLogin({ email, password }) === true) {\n  //             console.log(\"login success\");\n  //         }\n  //         else {\n  //             alert('Login failed');\n  //             setEmail(\"\");\n  //             setPassword(\"\");\n  //         }\n  //     }\n  //     else {\n  //         alert(\"Both email and password are required.\");\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"auth\",\n      fullWidth: true,\n      className: classes.formControl,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"auth-email\",\n        type: \"email\",\n        label: \"Email\",\n        variant: \"outlined\",\n        value: email,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setEmail(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"auth-password\",\n        type: \"password\",\n        label: \"Password\",\n        variant: \"outlined\",\n        value: password,\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"auth\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        disableElevation: true,\n        onClick: handleLogin,\n        className: classes.btn,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n} //autoComplete=\"current-password\"\n\n_s(LoginInput, \"eD26v0AY1cPB2KAFMZcyM6/RuAg=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginInput\");","map":{"version":3,"sources":["/Users/seungyunkim/Desktop/seungyoon/React-KPMG/project3_libor/src/components/login/logininput.js"],"names":["makeStyles","Redirect","React","TextField","InputLabel","FormControl","Button","Authentication","useStyles","theme","formControl","width","marginTop","spacing","input","btn","backgroundColor","color","testUsers","email","password","name","handleLogin","authToLogin","console","log","alert","setEmail","setPassword","LoginInput","classes","useState","auth","setAuth","isEmailValid","test","user","find","undefined","target","value"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\"\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Authentication from './authentication';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    input: {\n        marginTop: theme.spacing(1),\n    },\n    btn: {\n        backgroundColor: 'rgba(251,161,0, 0.8)',\n        marginTop: theme.spacing(3),\n        color: '#555'\n    },\n}));\n\nconst testUsers = [\n    { email: \"kim@test.com\", password: \"123\", name: \"Kim\" },\n    { email: \"lee@test.com\", password: \"456\", name: \"Lee\" },\n    { email: \"park@test.com\", password: \"789\", name: \"Park\" },\n]\n\nexport const handleLogin = () => {\n\n    if (email !== \"\" && password !== \"\") {\n        if (authToLogin({ email, password }) === true) {\n            console.log(\"login success\");\n        }\n        else {\n            alert('Login failed');\n            setEmail(\"\");\n            setPassword(\"\");\n        }\n    }\n    else {\n        alert(\"Both email and password are required.\");\n    }\n}\n\nexport default function LoginInput() {\n    const classes = useStyles();\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [auth, setAuth] = React.useState();\n\n    const isEmailValid = ({ email }) => {\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    const authToLogin = ({ email, password }) => {\n\n        if (isEmailValid({ email }) === true) {\n            const user = testUsers.find((user) => user.email === email && user.password === password)\n            if (user === undefined) return false;\n            setAuth(true);\n            <Redirect to='/' />\n            return true;\n        }\n        else {\n            <Redirect to='/login' />\n            return false;\n        }\n    }\n\n    // const handleLogin = () => {\n\n    //     if (email !== \"\" && password !== \"\") {\n    //         if (authToLogin({ email, password }) === true) {\n    //             console.log(\"login success\");\n    //         }\n    //         else {\n    //             alert('Login failed');\n    //             setEmail(\"\");\n    //             setPassword(\"\");\n    //         }\n    //     }\n    //     else {\n    //         alert(\"Both email and password are required.\");\n    //     }\n    // }\n\n    return (\n\n        <div>\n            <FormControl id='auth' fullWidth={true} className={classes.formControl} variant=\"outlined\">\n                <TextField\n                    className={classes.input}\n                    id=\"auth-email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={({ target: { value } }) => setEmail(value)}\n                />\n                <TextField\n                    className={classes.input}\n                    id=\"auth-password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    variant=\"outlined\"\n                    value={password}\n                    onChange={({ target: { value } }) => setPassword(value)}\n                />\n            </FormControl>\n            <InputLabel htmlFor='auth'>\n                {/* <Link style={{ textDecoration: 'none' }} to={auth ? \"/\" : \"/login\"}> */}\n                    <Button\n                        variant=\"contained\"\n                        fullWidth={true}\n                        disableElevation={true}\n                        onClick={handleLogin}\n                        className={classes.btn}\n                    >login\n                    </Button>\n                {/* </Link> */}\n            </InputLabel>\n        </div>\n    );\n}\n\n\n\n\n//autoComplete=\"current-password\""]},"metadata":{},"sourceType":"module"}